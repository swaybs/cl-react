{"version":3,"sources":["components/NavBar.js","components/starAPI.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["NavStyle","background","MenuButtonStyle","color","SimpleMenu","state","anchorEl","handleClick","event","_this","setState","currentTarget","handleClose","this","react_default","a","createElement","Button_default","style","aria-owns","undefined","aria-haspopup","onClick","core_Menu_default","id","open","Boolean","onClose","MenuItem_default","React","Component","NavBar","AppBar_default","position","title","alt","src","Toolbar_default","IconButton_default","aria-label","Menu_default","NavBar_SimpleMenu","Typography_default","variant","align","StarWarsAPI","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ComponentDidMount","fetch","then","response","json","data","console","log","people","films","hits","map","hit","key","objectID","href","url","PrimaryButtonStyles","borderRadius","padding","boxShadow","margin","SecondaryButtonStyles","BodyStyle","top","left","marginRight","transform","InputStyle","width","DividerStyle","display","MainButtons","className","size","Divider","CityInput","TextField_default","type","placeholder","helperText","fullWidth","inputProps","textAlign","FormHelperTextProps","getInputText","input_value","document","getElementById","value","innerHTML","ReturnSomething","MainBody","Body_CityInput","Body_ReturnSomething","starAPI","Body_Divider","Body_MainButtons","App","components_NavBar","Body","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb89fa43.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// NavBar Styles\r\nconst NavStyle = {\r\n  // backgroundColor: '#1F3037',\r\n  background: 'linear-gradient(135deg, #171A1F 60%, #5D151D 100%)',\r\n\r\n};\r\n\r\nconst MenuButtonStyle = {\r\n  color: 'white',\r\n};\r\n\r\nclass SimpleMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          style={MenuButtonStyle}\r\n          aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}\r\n        >\r\n          Open Menu\r\n        </Button>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MenuItem onClick={this.handleClose}>Search People</MenuItem>\r\n          <MenuItem onClick={this.handleClose}>Search Planets</MenuItem>\r\n          <MenuItem onClick={this.handleClose}>Search Ships</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Build Navbar to be used as a componentt\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={NavStyle}\r\n        // change this stupid line to make it work\r\n        title={<img alt=\"\" src=\"https://img.icons8.com/ios/24/000000/star-wars.png\" />}>\r\n        <Toolbar>\r\n        <IconButton color='inherit' aria-label='Menu'>\r\n          {/* Burger Icon Component */}\r\n        <MenuIcon />\r\n        </IconButton>\r\n        <SimpleMenu />\r\n\r\n          <Typography\r\n            variant=\"title\"\r\n            color=\"inherit\"\r\n            align=\"center\">\r\n            {/* Star Wars */}\r\n          </Typography>\r\n        </Toolbar>\r\n        </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass StarWarsAPI extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hits: [],\r\n    };\r\n  }\r\n\r\nComponentDidMount = () => {\r\n  var url = 'https://swapi.co/api';\r\n  fetch(url).then(response => response.json())\r\n    .then(data => console.log(data.people, data.films));\r\n}\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { hits } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <ul>\r\n        {hits.map(hit =>\r\n          <li key={hits.objectID}>\r\n            <a href={hits.url}>{hits.title}</a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default StarWarsAPI;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport StarWarsAPI from './starAPI';\r\n\r\n\r\nconst ButtonStyles = {\r\n  margin: '10px'\r\n};\r\n\r\nconst PrimaryButtonStyles = {\r\n  background: '#3E151C',\r\n  color: 'white',\r\n  borderRadius: 5,\r\n  padding: '0 30px',\r\n  boxShadow: 'o 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  margin: '10px'\r\n};\r\n\r\nconst SecondaryButtonStyles = {\r\n  background: '#A5B2A7',\r\n  color: 'white',\r\n  borderRadius: 5,\r\n  padding: '0 30px',\r\n  boxShadow: 'o 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  margin: '10px'\r\n};\r\n\r\nconst BodyStyle = {\r\n\r\n  /*border: '2px solid #D1ADBA',*/\r\n  margin: '0 auto',\r\n  padding: '10px',\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  marginRight: '-50&',\r\n  transform: 'translate(-50%, -50%)'\r\n};\r\n\r\nconst InputStyle = {\r\n  width: 'calc(200px + 2vmin)',\r\n  position: 'relative',\r\n  margin: '0 auto',\r\n  padding: '20px'\r\n};\r\n\r\nconst DividerStyle = {\r\n  width: '20px',\r\n  display: 'inline-block',\r\n  position: 'relative'\r\n};\r\n\r\n// WRITE NEW CLASS FOR BUTTONS TO RETURN\r\n// TEXT FROM TEXTFIELD INTO DIV\r\nclass ButtonMains extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\"\r\n    };\r\n\r\n  }\r\n}\r\n\r\nconst MainButtons = () => {\r\n  return (<div>\r\n    <Button id=\"button-load\" variant='contained' className=\"Button\" size='large' color=\"primary\" style={PrimaryButtonStyles}>\r\n      Load\r\n    </Button>\r\n    <Button id='button-reset' className=\"Button\" variant='contained' size='large' color=\"secondary\" style={SecondaryButtonStyles}>\r\n      Reset\r\n    </Button>\r\n  </div>);\r\n}\r\n\r\nconst Divider = () => {\r\n  return (<div></div>);\r\n}\r\n\r\nconst CityInput = () => (<form>\r\n  <br/>\r\n  <TextField style={InputStyle} id=\"people\" type=\"search\"\r\n    // label=\"City\"\r\n    placeholder=\"People\" helperText='Type the name of the person.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n  <br/>\r\n\r\n  <TextField style={InputStyle} id=\"films\" type=\"search\"\r\n    // label=\"State\"\r\n    placeholder=\"Films\" helperText='Type the name of the film.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n\r\n  <TextField style={InputStyle} id=\"starships\" type=\"search\"\r\n    // label=\"State\"\r\n    placeholder=\"Starship\" helperText='Type the name of the ship.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n\r\n  <TextField style={InputStyle} id=\"planet\" type=\"search\"\r\n    // label=\"State\"\r\n    placeholder=\"Planet\" helperText='Type the name of the planet.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n\r\n  <TextField style={InputStyle} id=\"vehicles\" type=\"search\"\r\n    // label=\"State\"\r\n    placeholder=\"Vehicle\" helperText='Type the name of the vehicle.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n\r\n  <TextField style={InputStyle} id=\"species\" type=\"search\"\r\n    // label=\"State\"\r\n    placeholder=\"Species\" helperText='Type the name of the species.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n\r\n  <TextField style={InputStyle} id=\"planet\" type=\"search\"\r\n    // label=\"State\"\r\n    placeholder=\"Planet\" helperText='Type the name of the planet.' fullWidth=\"fullWidth\" inputProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }} FormHelperTextProps={{\r\n      style: {\r\n        textAlign: 'center'\r\n      }\r\n    }}/>\r\n</form>);\r\n\r\nfunction getInputText() {\r\n  var input_value = document.getElementById('city').value;\r\n  return document.getElementById('return-h1').innerHTML = input_value;\r\n}\r\n\r\nconst ReturnSomething = () => {\r\n  return (<div>\r\n    <h1 id=\"return-h1\">{getInputText}</h1>\r\n    <h1></h1>\r\n  </div>);\r\n}\r\n\r\nconst MainBody = () => {\r\n  return (<div style={BodyStyle}>\r\n    <CityInput/>\r\n    <ReturnSomething/>\r\n    <StarWarsAPI/>\r\n    <Divider style={DividerStyle}/>\r\n    <MainButtons/>\r\n  </div>)\r\n}\r\n\r\nexport default MainBody;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport NavBar from './components/NavBar';\nimport MainBody from './components/Body';\n// import WeatherMain from './components/Weather';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Wrapper\">\n          <div className=\"Top-Nav\">\n            <NavBar />\n          </div>\n            <div className=\"ChildWrapper\">\n              <div className=\"mainBody\">\n                <MainBody />\n              </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}